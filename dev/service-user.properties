#-----------------------------------------------------------------------------------------------------------------------
#Configuration for service-user:
#-----------------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------------
configuration.text=service-user DEV
#-----------------------------------------------------------------------------------------------------------------------
#Bacis configuration of microservice:
spring.application.name=service-user
#A dynamic port is defined to allow multiple instances.
server.port=${PORT:${SERVER_PORT:0}}

#-----------------------------------------------------------------------------------------------------------------------
#Eureka configuration:
#Because Eureka doesn't register itself.
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#Esto es para manejar estáticamente el host. Se pasa a dinámico.
#eureka.instance.hostname=localhost
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#-----------------------------------------------------------------------------------------------------------------------
#Zipkin configuration:
spring.sleuth.sampler.probability=1.0
spring.zipkin.base-url=http://localhost:9411/

#-----------------------------------------------------------------------------------------------------------------------
#RabbitMQ configuration:
#En caso de levantar una instancia en un contenedor docker usar esta configuracion
#Para que tome la configuracion se deben reiniciar los contenedores docker
#spring.zipkin.base-url=http://zipkin-server:9411/
#spring.rabbitmq.host=microservicios-rabbitmq38
#Para usar rabbit, tambien se debe agregar la dependencia
#spring.zipkin.sender.type=rabbit

#-----------------------------------------------------------------------------------------------------------------------
#Database configuration:
##Para utilizar se debe habiliar junto al driver de la base de datos en el pom.xml
#Esta configuracion es para la imagen mysql dockerizada. Ademas se debe configurar igual que en productos (para MySQL no para PostgreSQL)
##spring.datasource.url=jdbc:mysql://mysql8-server:3306/db_springboot_cloud

#PostgreSQL:
##spring.datasource.url=jdbc:postgresql://localhost:5432/db_springboot_cloud
#spring.datasource.username=${DB_USER_NAME}
#spring.datasource.password=${DB_PASSWORD}
##spring.datasource.driver-class-name=org.postgresql.Driver
##El dialecto esta relacionado a la version de la base de datos.
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
##No se recomienda usar en produccion
#spring.jpa.hibernate.ddl-auto=create

#MySQL:
#spring.datasource.url=jdbc:mysql://localhost:3306/db_springboot_cloud
##Configurar la zona horaria.
##spring.datasource.url=jdbc:mysql://localhost:3306/db_springboot_cloud?serverTimezone=America/Argentina/Cordoba
##Para corregir el error Public Key Retrieval
##spring.datasource.url=jdbc:mysql://localhost:3306/db_springboot_cloud?serverTimezone=America/Argentina/Cordoba&allowPublicKeyRetrieval=true
##Para corregir el warning de SSL
#spring.datasource.url=jdbc:mysql://localhost:3306/db_springboot_cloud?serverTimezone=America/Argentina/Cordoba&allowPublicKeyRetrieval=true&useSSL=false

spring.datasource.url=jdbc:mysql://localhost:3306/db_springboot_cloud
spring.datasource.username=${DB_USER_NAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#spring.jpa.hibernate.ddl-auto=create
logging.level.org.hibernate.SQL=debug

#Si no se agrega esta configuracion falla spring boot con postgresql
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#-----------------------------------------------------------------------------------------------------------------------
#Application config

#-----------------------------------------------------------------------------------------------------------------------


